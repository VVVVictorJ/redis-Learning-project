services:
  backend:
    build: ./backend
    container_name: cat-expense-backend
    env_file:
      - .env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cat-expense-frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    depends_on:
      - backend

  db:
    image: postgres:13-alpine
    container_name: cat-expense-db
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2-alpine
    container_name: cat-expense-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    build: ./nginx
    container_name: cat-expense-nginx
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend

volumes:
  postgres_data: 